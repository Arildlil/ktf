checker checkpatch

# We deliberately allow these:
pervasive PREFER_PR_LEVEL LINUX_VERSION_CODE SPDX_LICENSE_TAG

except ALLOC_SIZEOF_STRUCT kcheck.c ktf_cov.c
except AVOID_EXTERNS kbase.c
except BRACES kbase.c kcheck.c ktf_debugfs.c ktf_map.c nl.c
except CODE_INDENT ktf_debugfs.c ktf_map.c
except COMPARISON_TO_NULL kbase.c ktf_cov.c ktf_map.c nl.c
except CONSTANT_COMPARISON ktf_override.c nl.c
except CONST_STRUCT ktf_debugfs.c
except EMBEDDED_FUNCTION_NAME nl.c
except EXPORT_SYMBOL kbase.c ktf_cov.c ktf_override.c
except FUNCTION_ARGUMENTS kbase.c
except GLOBAL_INITIALISERS kbase.c ktf_debugfs.c
except LINE_SPACING kbase.c kcheck.c ktf_cov.c ktf_map.c ktf_override.c nl.c
except NEEDLESS_IF ktf_cov.c ktf_debugfs.c nl.c
except OPEN_ENDED_LINE ktf_override.c nl.c
except PARENTHESIS_ALIGNMENT kbase.c kcheck.c ktf_cov.c ktf_debugfs.c ktf_map.c nl.c
except POINTER_LOCATION kbase.c kcheck.c nl.c
except PREFER_SEQ_PUTS ktf_cov.c
except PRINTK_WITHOUT_KERN_LEVEL kcheck.c
except RETURN_PARENTHESES ktf_debugfs.c
except SYMBOLIC_PERMS kbase.c
except TRAILING_STATEMENTS nl.c
except UNNECESSARY_CASTS kcheck.c
except UNNECESSARY_PARENTHESES ktf_map.c

checker smatch

# This looks like a false hit:
except UNREACHABLE kcheck.c

checker sparse

# sparse does not get the conditional lock/unlock:
except CONTEXT kbase.c

except DECL kbase.c kcheck.c ktf_cov.c ktf_debugfs.c ktf_map.c nl.c
except DUBIOUS_EXPR kcheck.c ktf_cov.c

except ADDRESS_SPACE ktf_override.c
except ARG_TYPE_MOD ktf_override.c
except NO_DEREF ktf_override.c
except SHADOW ktf_override.c
